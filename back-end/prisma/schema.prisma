// npx prisma db push - create the database schema
// npx prisma generate - generate the Prisma Client

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  name           String?
  photo          String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  additionalInfo AdditionalInfo[]
  role           UserRole         @default(USER)
  status         UserStatus       @default(ACTIVE)
  Task           Task[]

  @@index([email])
  @@map("users")
}

model AdditionalInfo {
  id           Int          @id @default(autoincrement())
  password     String?
  userId       Int
  signupMethod SignupMethod @default(EMAIL)
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@index([userId])
  @@map("additional_info")
}

model Task {
  id        String   @id @default(uuid())
  title     String
  content   String?
  Status    String
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@map("tasks")
}

enum SignupMethod {
  EMAIL
  GOOGLE
}

enum UserRole {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}
